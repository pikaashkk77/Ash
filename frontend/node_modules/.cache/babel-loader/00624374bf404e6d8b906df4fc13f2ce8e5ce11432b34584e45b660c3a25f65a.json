{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\airportapp\\\\src\\\\AdminAccess.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './adminaccess.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = ({\n  closeModal\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8080/admin/login', {\n        username,\n        password\n      });\n\n      // If login is successful, navigate to the admin dashboard\n      if (response.status === 200) {\n        console.log('Login successful:', response.data);\n        navigate('/admin-dashboard');\n      }\n    } catch (error) {\n      console.error('Login failed:', error.response ? error.response.data : error.message);\n      alert('Invalid username or password'); // You can display a more user-friendly message\n    } /*finally {\r\n      closeModal(); // Close modal regardless of success or failure\r\n      }*/\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"admin-close\",\n        onClick: handleCloseModal,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bx bxs-user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bx bxs-lock-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"Jsd2F8JaLy6SkmsHmGs0pwRe/zY=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","AdminLogin","closeModal","_s","username","setUsername","password","setPassword","navigate","isModalOpen","setIsModalOpen","handleCloseModal","handleSubmit","e","preventDefault","response","post","status","console","log","data","error","message","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/DELL/airportapp/src/AdminAccess.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './adminaccess.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'; // Import axios\r\n\r\n\r\nconst AdminLogin = ({ closeModal }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  const [isModalOpen,setIsModalOpen] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/admin/login', {\r\n        username,\r\n        password\r\n      });\r\n\r\n      // If login is successful, navigate to the admin dashboard\r\n      if (response.status === 200) {\r\n        console.log('Login successful:', response.data);\r\n        navigate('/admin-dashboard');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login failed:', error.response ? error.response.data : error.message);\r\n      alert('Invalid username or password'); // You can display a more user-friendly message\r\n    } /*finally {\r\n      closeModal(); // Close modal regardless of success or failure\r\n    }*/\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-modal\">\r\n      <div className=\"admin-modal-content\">\r\n        <h2>Admin Login</h2>\r\n        <span className=\"admin-close\" onClick={handleCloseModal}>&times;</span>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-box\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n            <i className=\"bx bxs-user\"></i>\r\n          </div>\r\n          <div className=\"input-box\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <i className=\"bx bxs-lock-alt\"></i>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn\">Login</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}